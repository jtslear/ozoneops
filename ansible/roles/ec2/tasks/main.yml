---

- name: Launch instances
  local_action:
    module: ec2
    keypair: "{{ ec2_keypair }}"
    group: "{{ ec2_groups }}"
    instance_type: "{{ ec2_instance_type | d('t1.micro') }}"
    image: "{{ ec2_ami | d('ami-97fb9fb4') }}"
    count: "{{ ec2_count | d(1) }}"
    instance_tags: "{{ ec2_instance_tags | d('') }}"
    user_data: "{{ ec2_user_data | d('') }}"
    instance_profile_name: "{{ ec2_instance_iam_role | d('') }}"
    vpc_subnet_id: "{{ ec2_vpc_subnet_id | d('') }}"
    wait: yes
  register: ec2

- name: Add the new instances' public DNS names to a host group
  local_action: add_host hostname={{ item.public_dns_name }} groupname={{ ansible_host_group | d('transient') }}
  with_items: ec2.instances
  when: ec2_vpc_subnet_id is not defined

- name: Add the new instances' private IP addresses to a host group 
  local_action: add_host hostname={{ item.private_ip }} groupname={{ ansible_host_group | d('transient') }}
  with_items: ec2.instances
  when: ec2_vpc_subnet_id is defined

- name: Wait for the new instances to be available via ssh
  wait_for: delay=10 host={{ item.public_dns_name }} port=22 state=started timeout=360
  with_items: ec2.instances
  when: ec2_vpc_subnet_id is not defined

- name: Wait for the new instances to be available via ssh
  wait_for: delay=10 host={{ item.private_ip }} port=22 state=started timeout=360
  with_items: ec2.instances
  when: ec2_vpc_subnet_id is defined
